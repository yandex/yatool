# Generated by devtools/yamaker/ym2

LIBRARY()

LICENSE(
    BSD-2-Clause AND
    BSD-3-Clause AND
    Bsd-Unmodified AND
    ISC AND
    LicenseRef-scancode-other-permissive AND
    LicenseRef-scancode-unknown-license-reference AND
    MIT AND

    Public-Domain AND
    Red-Hat-Attribution AND
    Sunpro
)

LICENSE_TEXTS(.yandex_meta/licenses.list.txt)

VERSION(1.2.3)

ORIGINAL_SOURCE(https://www.musl-libc.org/releases/musl-1.2.3.tar.gz)

NO_COMPILER_WARNINGS()

IF (ARCH_X86_64)
    ADDINCL(
        contrib/libs/musl/arch/x86_64
    )
ENDIF()

IF (ARCH_AARCH64)
    ADDINCL(
        contrib/libs/musl/arch/aarch64
    )
ENDIF()

ADDINCL(
    contrib/libs/musl/arch/generic
    contrib/libs/musl/src/include
    contrib/libs/musl/src/internal
    contrib/libs/musl/include
    contrib/libs/musl/extra
)

NO_PLATFORM()

NO_RUNTIME()

CFLAGS(
    GLOBAL -D_musl_=1
    -D_XOPEN_SOURCE=700
    -U_GNU_SOURCE
    -nostdinc
    -ffreestanding
    -fno-stack-protector
    -D__libc_calloc=calloc
    -D__libc_malloc=malloc
    -D__libc_free=free
)

LDFLAGS(-static)

EXTRALIBS(
    -nostdlib
    -fno-pie
    -Wl,-no-pie
)

IF (NOT WITH_VALGRIND)
    # Disable LD_PRELOAD by default to prevent .so constructors from
    # running before MUSL is initialized, but enable for Valgrind to
    # preload it's runtime (vgpreload_core-amd64-linux.so) into the
    # process and intercept custom malloc/free implemetations.
    LDFLAGS(-Wl,--no-dynamic-linker)
ENDIF()

INCLUDE(ya.make.inc)

SRCS(
    dso.c
    crt/crt1.c
    reallocarray.c
)

IF (NOT USE_EAT_MY_DATA)
    SRCS(
        src/linux/sync_file_range.c
        src/mman/msync.c
        src/unistd/fdatasync.c
        src/unistd/fsync.c
        src/unistd/sync.c
    )
ENDIF()

END()
